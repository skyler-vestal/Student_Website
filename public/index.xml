<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introduction on Skyler ~ UTCS</title>
    <link>https://www.cs.utexas.edu/~ves314/</link>
    <description>Recent content in Introduction on Skyler ~ UTCS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://www.cs.utexas.edu/~ves314/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Chapter 1</title>
      <link>https://www.cs.utexas.edu/~ves314/docs/ta/cs303e/exercises/ch1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.cs.utexas.edu/~ves314/docs/ta/cs303e/exercises/ch1/</guid>
      <description>Chapter 1 Exercise Solutions#Download Solutions
Embdedded solutions:
# Exercises for Chapter 1 of &amp;#34;Introduction to Programming using Python&amp;#34; # Solutions made by Skyler Vestal (Hook &amp;#39;Em) # 1.2 print(&amp;#34;Welcome to Python&amp;#34;) print(&amp;#34;Welcome to Python&amp;#34;) print(&amp;#34;Welcome to Python&amp;#34;) print(&amp;#34;Welcome to Python&amp;#34;) print(&amp;#34;Welcome to Python&amp;#34;) # 1.4 print(&amp;#34;a a^2 a^3&amp;#34;) print(&amp;#34;1 1 1&amp;#34;) print(&amp;#34;2 4 8&amp;#34;) print(&amp;#34;3 9 27&amp;#34;) print(&amp;#34;4 16 64&amp;#34;) # 1.7 print(4 * (1 - (1 / 3) + (1 / 5) - (1 / 7) + (1 / 9) - (1 / 11))) print(4 * (1 - (1 / 3) + (1 / 5) - (1 / 7) + (1 / 9) - (1 / 11) + (1 / 13) - (1 / 15))) # 1.</description>
    </item>
    
    <item>
      <title>Syntax</title>
      <link>https://www.cs.utexas.edu/~ves314/docs/ta/cs303e/syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.cs.utexas.edu/~ves314/docs/ta/cs303e/syntax/</guid>
      <description>Python Syntax Review for CS 303E#Variables and Datatypes#Types of Data## Integer datatype: Stores whole numbers like -32, 0, 66, 2332312, ... int_var = -54 # Float datatype: Stores decimal numbers like 3.0, -2.3232, .00033, # 5.6e+15 float_var = -.04 # Boolean datatype: Stores the value true or false bool_var = True bool_var = False # String datatype: Stores any word str_var = &amp;#34;You can use double quotes&amp;#34; str_var = &amp;#39;or single quotes for strings&amp;#39; Modification## These two are the same # This works for +, -, *, /, //, %, ** int_var = int_var + 5 int_var += 5 # Operators examples 10 / 3 # == 3.</description>
    </item>
    
    <item>
      <title>Chapter 2</title>
      <link>https://www.cs.utexas.edu/~ves314/docs/ta/cs303e/exercises/ch2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.cs.utexas.edu/~ves314/docs/ta/cs303e/exercises/ch2/</guid>
      <description>Chapter 2 Exercise Solutions#Download Solutions
Embedded solutions:
# Exercies for Chapter 2 of &amp;#34;Introduction to Programming using Python&amp;#34; # Solutions made by Skyler Vestal (Hook &amp;#39;Em) # 2.1 celsius = eval(input(&amp;#34;Enter a degree in Celsius: &amp;#34;)) fahrenheit = (9 / 5) * celsius + 32 print(celsius, &amp;#34;Celsius is&amp;#34;, fahrenheit, &amp;#34;Fahrenheit&amp;#34;) # 2.2 radius, length = eval(input(&amp;#34;Enter area and volume: &amp;#34;)) area = radius * radius * 3.14 volume = area * length print(&amp;#34;The area is&amp;#34;, area) print(&amp;#34;The volume is&amp;#34;, volume) # 2.</description>
    </item>
    
    <item>
      <title>Style</title>
      <link>https://www.cs.utexas.edu/~ves314/docs/ta/cs303e/style/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.cs.utexas.edu/~ves314/docs/ta/cs303e/style/</guid>
      <description>Python Style Guide for CS 303E#Highlights#The following are highlighted style guidelines to follow based off the assignment page here.
Two Blank Lines#This highlight states to include two blank lines both before and after our function:
# ... # Grader: Skyler # # On my honor, Skyler Vestal, this programming assignment is my own work # and I have not provided this code to any other student.</description>
    </item>
    
    <item>
      <title>Chapter 3</title>
      <link>https://www.cs.utexas.edu/~ves314/docs/ta/cs303e/exercises/ch3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.cs.utexas.edu/~ves314/docs/ta/cs303e/exercises/ch3/</guid>
      <description>Chapter 3 Exercise Solutions#Download Solutions
Embedded solutions:
# Exercises for Chapter 3 of &amp;#34;Introduction to Programming using Python&amp;#34; # Solutions made by Skyler Vestal (Hook &amp;#39;Em) import math import time # 3.2 length = eval(input(&amp;#34;Enter the length from the center to a vertex: &amp;#34;)) side = 2 * length * math.sin(math.pi / 5) area = (3 * math.sqrt(3)/2) * side**2 print(&amp;#34;The area of the pentagon is&amp;#34;, round(area, 2)) # 3.</description>
    </item>
    
    <item>
      <title>Chapter 4</title>
      <link>https://www.cs.utexas.edu/~ves314/docs/ta/cs303e/exercises/ch4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.cs.utexas.edu/~ves314/docs/ta/cs303e/exercises/ch4/</guid>
      <description>Chapter 4 Exercise Solutions#Download Solutions
Embedded solutions:
# Exercies for Chapter 4 of &amp;#34;Introduction to Programming using Python&amp;#34; # Solutions made by Skyler Vestal (Hook &amp;#39;Em) import math import random # 4.1 a, b, c = eval(input(&amp;#34;Enter, a, b, c: &amp;#34;)) discrim = b ** 2 - (4 * a * c) if discrim &amp;lt; 0: print(&amp;#34;The equation has no real roots&amp;#34;) else: root_1 = (-b + math.</description>
    </item>
    
    <item>
      <title>Chapter 5</title>
      <link>https://www.cs.utexas.edu/~ves314/docs/ta/cs303e/exercises/ch5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.cs.utexas.edu/~ves314/docs/ta/cs303e/exercises/ch5/</guid>
      <description>Chapter 5 Exercise Solutions#Download Solutions
Embedded solutions:
# Exercises for Chapter 5 of &amp;#34;Introduction to Programming using Python&amp;#34; # Solutions made by Skyler Vestal (Hook &amp;#39;Em) import math # 5.1 input_prompt = &amp;#34;Enter an integer, the input ends if it is 0: &amp;#34; keep_running = eval(input(input_prompt)) != 0 while keep_running: keep_running = eval(input(input_prompt)) != 0 # 5.3 print(&amp;#34;Kilograms Pounds&amp;#34;) for kilos in range(1, 200): pounds = kilos * 2.</description>
    </item>
    
    <item>
      <title>Chapter 6</title>
      <link>https://www.cs.utexas.edu/~ves314/docs/ta/cs303e/exercises/ch6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.cs.utexas.edu/~ves314/docs/ta/cs303e/exercises/ch6/</guid>
      <description>Chapter 6 Exercise Solutions#Download Solutions
Embedded solutions:
# Exercises for Chapter 6 of &amp;#34;Introduction to Programming using Python&amp;#34; # Solutions made by Skyler Vestal (Hook &amp;#39;Em) import random # 6.1 # CS 311 exercise =) - Prove that for any n the pentagonal number # is an integer def getPentagonalNumber(n): return n * (3 * n - 1) // 2 for i in range(10): line_str = str(getPentagonalNumber(i * 10 + 1)) for j in range(2, 11): line_str += &amp;#34;, &amp;#34; + str(getPentagonalNumber(i * 10 + j)) print(line_str) # 6.</description>
    </item>
    
    <item>
      <title>Chapter 7</title>
      <link>https://www.cs.utexas.edu/~ves314/docs/ta/cs303e/exercises/ch7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.cs.utexas.edu/~ves314/docs/ta/cs303e/exercises/ch7/</guid>
      <description>Chapter 7 Exercise Solutions#Download Solutions
Embedded solutions:
# Exercises for Chapter 6 of &amp;#34;Introduction to Programming using Python&amp;#34; # Solutions made by Skyler Vestal (Hook &amp;#39;Em) import time # 7.1 class Rectangle: def __init__(self, width = 1, height = 2): self.width = width self.height = height # Don&amp;#39;t name functions like this at home kids def getArea(self): return self.width * self.height def getPerimeter(self): return 2 * (self.width + self.</description>
    </item>
    
  </channel>
</rss>