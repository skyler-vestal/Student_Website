'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/docs/','title':"Example Site",'content':"Introduction\r#\r\rFerre hinnitibus erat accipitrem dixi Troiae tollens\r#\r\rLorem markdownum, a quoque nutu est quodcumque mandasset veluti. Passim inportuna totidemque nympha fert; repetens pendent, poenarum guttura sed vacet non, mortali undas. Omnis pharetramque gramen portentificisque membris servatum novabis fallit de nubibus atque silvas mihi. Dixit repetitaque Quid; verrit longa; sententia mandat quascumque nescio solebat litore; noctes. Hostem haerentem circuit plenaque tamen.\n Pedum ne indigenae finire invergens carpebat Velit posses summoque De fumos illa foret  Est simul fameque tauri qua ad\r#\r\rLocum nullus nisi vomentes. Ab Persea sermone vela, miratur aratro; eandem Argolicas gener.\nMe sol\r#\r\rNec dis certa fuit socer, Nonacria dies manet tacitaque sibi? Sucis est iactata Castrumque iudex, et iactato quoque terraeque es tandem et maternos vittis. Lumina litus bene poenamque animos callem ne tuas in leones illam dea cadunt genus, et pleno nunc in quod. Anumque crescentesque sanguinis progenies nuribus rustica tinguet. Pater omnes liquido creditis noctem.\nif (mirrored(icmp_dvd_pim, 3, smbMirroredHard) != lion(clickImportQueue,\rviralItunesBalancing, bankruptcy_file_pptp)) {\rfile += ip_cybercrime_suffix;\r}\rif (runtimeSmartRom == netMarketingWord) {\rvirusBalancingWin *= scriptPromptBespoke + raster(post_drive,\rwindowsSli);\rcd = address_hertz_trojan;\rsoap_ccd.pcbServerGigahertz(asp_hardware_isa, offlinePeopleware, nui);\r} else {\rmegabyte.api = modem_flowchart - web + syntaxHalftoneAddress;\r}\rif (3 \u0026lt; mebibyteNetworkAnimated) {\rpharming_regular_error *= jsp_ribbon + algorithm * recycleMediaKindle(\rdvrSyntax, cdma);\radf_sla *= hoverCropDrive;\rtemplateNtfs = -1 - vertical;\r} else {\rexpressionCompressionVariable.bootMulti = white_eup_javascript(\rtable_suffix);\rguidPpiPram.tracerouteLinux += rtfTerabyteQuicktime(1,\rmanagementRosetta(webcamActivex), 740874);\r}\rvar virusTweetSsl = nullGigo;\r Trepident sitimque\r#\r\rSentiet et ferali errorem fessam, coercet superbus, Ascaniumque in pennis mediis; dolor? Vidit imi Aeacon perfida propositos adde, tua Somni Fluctibus errante lustrat non.\nTamen inde, vos videt e flammis Scythica parantem rupisque pectora umbras. Haec ficta canistris repercusso simul ego aris Dixit! Esse Fama trepidare hunc crescendo vigor ululasse vertice exspatiantur celer tepidique petita aversata oculis iussa est me ferro.\n"});index.add({'id':1,'href':'/docs/ta/cs303e/exercises/ch1/','title':"Chapter 1",'content':"Chapter 1 Exercise Solutions\r#\r\rDownload Solutions\nEmbdedded solutions:\n# Exercises for Chapter 1 of \u0026#34;Introduction to Programming using Python\u0026#34; # Solutions made by Skyler Vestal (Hook \u0026#39;Em) # 1.2 print(\u0026#34;Welcome to Python\u0026#34;) print(\u0026#34;Welcome to Python\u0026#34;) print(\u0026#34;Welcome to Python\u0026#34;) print(\u0026#34;Welcome to Python\u0026#34;) print(\u0026#34;Welcome to Python\u0026#34;) # 1.4 print(\u0026#34;a a^2 a^3\u0026#34;) print(\u0026#34;1 1 1\u0026#34;) print(\u0026#34;2 4 8\u0026#34;) print(\u0026#34;3 9 27\u0026#34;) print(\u0026#34;4 16 64\u0026#34;) # 1.7 print(4 * (1 - (1 / 3) + (1 / 5) - (1 / 7) + (1 / 9) - (1 / 11))) print(4 * (1 - (1 / 3) + (1 / 5) - (1 / 7) + (1 / 9) - (1 / 11) + (1 / 13) - (1 / 15))) # 1.8 print(\u0026#34;Area: \u0026#34;) print(5.5 * 5.5 * 3.14) print(\u0026#34;Perimeter: \u0026#34;) print(2 * 5.5 * 3.14) # 1.11 # Don\u0026#39;t think the textbook has covered multi-line statements yet ... # using one regardless print(\u0026#34;Population year 1:\u0026#34;) print(312032486 + (1 * 365 * 24 * 60 * 60 // 7) + (1 * 365 * 24 * 60 * 60 // 45) - (1 * 365 * 24 * 60 * 60 // 13)) print(\u0026#34;Population year 2:\u0026#34;) print(312032486 + (2 * 365 * 24 * 60 * 60 // 7) + (2 * 365 * 24 * 60 * 60 // 45) - (2 * 365 * 24 * 60 * 60 // 13)) print(\u0026#34;Population year 3:\u0026#34;) print(312032486 + (3 * 365 * 24 * 60 * 60 // 7) + (3 * 365 * 24 * 60 * 60 // 45) - (3 * 365 * 24 * 60 * 60 // 13)) print(\u0026#34;Population year 4:\u0026#34;) print(312032486 + (4 * 365 * 24 * 60 * 60 // 7) + (4 * 365 * 24 * 60 * 60 // 45) - (4 * 365 * 24 * 60 * 60 // 13)) print(\u0026#34;Population year 5:\u0026#34;) print(312032486 + (5 * 365 * 24 * 60 * 60 // 7) + (5 * 365 * 24 * 60 * 60 // 45) - (5 * 365 * 24 * 60 * 60 // 13)) "});index.add({'id':2,'href':'/docs/ta/cs303e/','title':"CS 303E",'content':"CS 303E - Elements of Computers and Programming\r#\r\rHey y\u0026rsquo;all!\nThis page is updated for the Summer 2020 session of CS 303E.\nIf you have any questions you can reach me with whatever mode of communication works best for you here.\nMy main responsibilities for this class include being in charge of managing the grades of students with the last names [KRU, RIC] along with being the main developer of the class\u0026rsquo;s grading script:\n"});index.add({'id':3,'href':'/docs/ta/cs303e/syntax/','title':"Syntax",'content':"Python Syntax Review for CS 303E\r#\r\rUnder construction\nðŸ”¨\r#\r\r"});index.add({'id':4,'href':'/docs/ta/','title':"TA Classes",'content':""});index.add({'id':5,'href':'/docs/ta/cs303e/exercises/ch2/','title':"Chapter 2",'content':"Chapter 2 Exercise Solutions\r#\r\rDownload Solutions\nEmbedded solutions:\n# Exercies for Chapter 2 of \u0026#34;Introduction to Programming using Python\u0026#34; # Solutions made by Skyler Vestal (Hook \u0026#39;Em) # 2.1 celsius = eval(input(\u0026#34;Enter a degree in Celsius: \u0026#34;)) fahrenheit = (9 / 5) * celsius + 32 print(celsius, \u0026#34;Celsius is\u0026#34;, fahrenheit, \u0026#34;Fahrenheit\u0026#34;) # 2.2 radius, length = eval(input(\u0026#34;Enter area and volume: \u0026#34;)) area = radius * radius * 3.14 volume = area * length print(\u0026#34;The area is\u0026#34;, area) print(\u0026#34;The volume is\u0026#34;, volume) # 2.3 feet = eval(input(\u0026#34;Enter a value for feet: \u0026#34;)) meters = feet * .305 print(feet, \u0026#34;feet is\u0026#34;, meters, \u0026#34;meters\u0026#34;) # 2.4 pounds = eval(input(\u0026#34;Enter a value in pounds: \u0026#34;)) kilograms = pounds * .454 print(pounds, \u0026#34;pounds is\u0026#34;, kilograms, \u0026#34;kilograms\u0026#34;) # 2.5 subtotal, gratuity_rate = eval(input(\u0026#34;Enter the subtotal and a gratuity rate: \u0026#34;)) gratuity = subtotal * gratuity_rate/100 total = subtotal + gratuity # Don\u0026#39;t think rounding to n digits have been covered yet ... using it anyway print(\u0026#34;The gratuity is\u0026#34;, round(gratuity, 2), \u0026#34;and the total is\u0026#34;, round(total, 2)) # 2.6 total = 0 num = eval(input(\u0026#34;Enter a number between 0 and 1000: \u0026#34;)) total += num % 10 num //= 10 total += num % 10 num //= 10 total += num % 10 num //= 10 total += num % 10 num //= 10 print(\u0026#34;The sum of the digits is\u0026#34;, total) # 2.7 mins = eval(input(\u0026#34;Enter the number of minutes: \u0026#34;)) total_days = mins // 60 // 24 years = total_days // 365 remainder_days = total_days % 365 print(mins, \u0026#34;minutes is approximately\u0026#34;, years, \u0026#34;years and\u0026#34;, remainder_days, \u0026#34;days\u0026#34;) # 2.9 fahrenheit = eval(input(\u0026#34;Enter the temeprature in Fahrenheit between -58 and 41: \u0026#34;)) wind_speed = eval(input(\u0026#34;Enter the wind speed in miles per hour: \u0026#34;)) # Adjust wind speed to v^.16 wind_speed **= .16 wind_chill = (35.74 + (0.6215 * fahrenheit) - (35.75 * wind_speed) + (0.4275 * fahrenheit * wind_speed)) # Again the answer is rounded despite the textbook not covering rounding to n digits print(\u0026#34;The wind chill index is\u0026#34;, round(wind_chill, 5)) # 2.10 speed, accel = eval(input(\u0026#34;Enter speed and acceleration: \u0026#34;)) length = speed ** 2 / (2 * accel) print(\u0026#34;The minimum runway length for this airplane is\u0026#34;, round(length, 3), \u0026#34;meters\u0026#34;) # 2.16 v_0, v_1, t = eval(input(\u0026#34;Enter v0, v1, and t: \u0026#34;)) avg_accel = (v_1 - v_0)/t print(\u0026#34;The average acceleration is\u0026#34;, round(avg_accel, 4)) # 2.22 years = eval(input(\u0026#34;Enter the number of years: \u0026#34;)) population = 312032486 + ((years * 365 * 24 * 60 * 60 // 7) + (years * 365 * 24 * 60 * 60 // 45) - (years * 365 * 24 * 60 * 60 // 13)) print(\u0026#34;The population in\u0026#34;, years, \u0026#34;years is\u0026#34;, population) "});index.add({'id':6,'href':'/docs/personal_work/','title':"Personal Work",'content':""});index.add({'id':7,'href':'/docs/personal_work/projects/','title':"Projects",'content':""});index.add({'id':8,'href':'/docs/ta/cs303e/style/','title':"Style",'content':"Python Style Guide for CS 303E\r#\r\rUnder construction\nðŸ”¨\r#\r\r"});index.add({'id':9,'href':'/docs/ta/cs303e/exercises/ch3/','title':"Chapter 3",'content':"Chapter 3 Exercise Solutions\r#\r\rDownload Solutions\nEmbedded solutions:\n# Exercises for Chapter 3 of \u0026#34;Introduction to Programming using Python\u0026#34; # Solutions made by Skyler Vestal (Hook \u0026#39;Em) import math import time # 3.2 length = eval(input(\u0026#34;Enter the length from the center to a vertex: \u0026#34;)) side = 2 * length * math.sin(math.pi / 5) area = (3 * math.sqrt(3)/2) * side**2 print(\u0026#34;The area of the pentagon is\u0026#34;, round(area, 2)) # 3.3 # Using google instead atlanta_x, atlanta_y = math.radians(33.7490), math.radians(84.3880) orlando_x, orlando_y = math.radians(28.5383), math.radians(81.3792) savannah_x, savannah_y = math.radians(32.0809), math.radians(81.0912) charlotte_x, charlotte_y = math.radians(35.2271), math.radians(80.8431) # Earth\u0026#39;s radius is 6,371.01km radius = 6371.01 # Get mapped distances dist_atl_char = (radius * math.acos(math.sin(atlanta_x) * math.sin(charlotte_x) + math.cos(atlanta_x) * math.cos(charlotte_x) * math.cos(atlanta_y - charlotte_y))) dist_char_sav = (radius * math.acos(math.sin(charlotte_x) * math.sin(savannah_x) + math.cos(charlotte_x) * math.cos(savannah_x) * math.cos(charlotte_y - savannah_y))) dist_sav_atl = (radius * math.acos(math.sin(savannah_x) * math.sin(atlanta_x) + math.cos(savannah_x) * math.cos(atlanta_x) * math.cos(savannah_y - atlanta_y))) dist_sav_orl = (radius * math.acos(math.sin(savannah_x) * math.sin(orlando_x) + math.cos(savannah_x) * math.cos(orlando_x) * math.cos(savannah_y - orlando_y))) dist_orl_atl = (radius * math.acos(math.sin(orlando_x) * math.sin(atlanta_x) + math.cos(orlando_x) * math.cos(atlanta_x) * math.cos(orlando_y - atlanta_y))) print(dist_atl_char, dist_char_sav, dist_orl_atl, dist_sav_atl, dist_sav_orl) # Split the area into two triangles # Triangle 1: s_1 = (dist_atl_char + dist_char_sav + dist_sav_atl)/2 area_1 = math.sqrt(s_1 * (s_1 - dist_atl_char) * (s_1 - dist_char_sav) * (s_1 - dist_sav_atl)) # Triangle 2: s_2 = (dist_sav_orl + dist_orl_atl + dist_sav_atl)/2 area_2 = math.sqrt(s_2 * (s_2 - dist_sav_orl) * (s_2 - dist_orl_atl) * (s_2 - dist_sav_atl)) final_area = area_1 + area_2 print(\u0026#34;The area encompassed by the four cities is\u0026#34;, round(final_area, 2), \u0026#34;square km!\u0026#34;) # 3.6 input_code = eval(input(\u0026#34;Enter an ASCII code: \u0026#34;)) display_chr = chr(input_code) print(\u0026#34;The character is\u0026#34;, display_chr) # 3.7 # Have only 26 possible numbers random_code = int(time.time() % 26) # Make the starting number A (65 + 0 = A :)) display_chr = chr(65 + random_code) print(\u0026#34;The random character is\u0026#34;, display_chr) # 3.10 print(\u0026#34;\\u03b1\\u03b2\\u03b3\\u03b4\\u03b5\\u03b6\\u03b7\\u03b8\u0026#34;) "});index.add({'id':10,'href':'/docs/ta/cs303e/exercises/','title':"Exercises",'content':"Solved Excersises for CS 303E\r#\r\rThis directory contains solutions for the suggested exercises Mike has put up on the class schedule page.\nThe solutions should be posted here early in the week for the following week of assignments. Make sure to come back here for solutions if they aren\u0026rsquo;t up yet!\nIf you think I made an error in a solution make sure to contact me here.\n   Week Exercises Covered     1 1.2 - 1.11   2 2.1 - 2.22 \u0026mdash; 3.2 - 3.10   3 4.1 - 4.22 \u0026mdash; 5.1 - 5.14   4 5.18 - 5.45 \u0026mdash; 6.1 - 6.8    "});index.add({'id':11,'href':'/docs/personal_work/research/','title':"Research",'content':""});index.add({'id':12,'href':'/docs/ta/cs303e/exercises/ch4/','title':"Chapter 4",'content':"Chapter 4 Exercise Solutions\r#\r\rDownload Solutions\nEmbedded solutions:\n# Exercies for Chapter 4 of \u0026#34;Introduction to Programming using Python\u0026#34; # Solutions made by Skyler Vestal (Hook \u0026#39;Em) import math import random # 4.1 a, b, c = eval(input(\u0026#34;Enter, a, b, c: \u0026#34;)) discrim = b ** 2 - (4 * a * c) if discrim \u0026lt; 0: print(\u0026#34;The equation has no real roots\u0026#34;) else: root_1 = (-b + math.sqrt(discrim)) / (2 * a) if discrim == 0: print(\u0026#34;The root is\u0026#34;, root_1) else: root_2 = (-b - math.sqrt(discrim)) / (2 * a) print(\u0026#34;The roots are\u0026#34;, root_1, \u0026#34;and\u0026#34;, root_2) # 4.2 num_1 = random.randint(0, 9) num_2 = random.randint(0, 9) num_3 = random.randint(0, 9) add_string = str(num_1) + \u0026#34; + \u0026#34; + str(num_2) + \u0026#34; + \u0026#34; + str(num_3) answer = eval(input(\u0026#34;What is \u0026#34; + add_string + \u0026#34;? \u0026#34;)) print(add_string, \u0026#34;=\u0026#34;, answer, \u0026#34;is\u0026#34;, answer == num_1 + num_2 + num_3) # 4.4 num_1 = random.randint(0, 99) num_2 = random.randint(0, 99) add_string = str(num_1) + \u0026#34; + \u0026#34; + str(num_2) answer = eval(input(\u0026#34;What is \u0026#34; + add_string + \u0026#34;? \u0026#34;)) print(add_string, \u0026#34;=\u0026#34;, answer, \u0026#34;is\u0026#34;, answer == num_1 + num_2) # 4.6 weight = eval(input(\u0026#34;Enter weight in pounds: \u0026#34;)) feet = eval(input(\u0026#34;Enter feet: \u0026#34;)) inches = eval(input(\u0026#34;Enter inches: \u0026#34;)) inches += feet * 12 KILOGRAMS_PER_POUND = .45359237 METERS_PER_INCH = .0254 weight_in_kilograms = weight * KILOGRAMS_PER_POUND height_in_meters = inches * METERS_PER_INCH bmi = weight_in_kilograms / (height_in_meters ** 2) print(\u0026#34;BMI is\u0026#34;, bmi) if bmi \u0026lt; 18.5: print(\u0026#34;You are Underweight\u0026#34;) elif bmi \u0026lt; 25: print(\u0026#34;You are Normal\u0026#34;) elif bmi \u0026lt; 30: print(\u0026#34;You are Overweight\u0026#34;) else: print(\u0026#34;You are Obese\u0026#34;) # 4.8 num_1, num_2, num_3 = eval(input(\u0026#34;Enter 3 numberss (a, b, c): \u0026#34;)) if num_1 \u0026gt; num_2: num_1, num_2 = num_2, num_1 if num_2 \u0026gt; num_3: num_2, num_3 = num_3, num_2 if num_1 \u0026gt; num_3: num_1, num_3 = num_3, num_1 if num_1 \u0026gt; num_2: num_1, num_2 = num_2, num_1 print(\u0026#34;Numbers ordered:\u0026#34;, num_1, num_2, num_3) # 4.10 num_1 = random.randint(0, 99) num_2 = random.randint(0, 99) mult_string = str(num_1) + \u0026#34; * \u0026#34; + str(num_2) real_answer = num_1 * num_2 answer = eval(input(\u0026#34;What is \u0026#34; + mult_string + \u0026#34;? \u0026#34;)) if real_answer == answer: print(\u0026#34;You are correct!\u0026#34;) else: print(\u0026#34;Your answer is wrong.\\n\u0026#34;, mult_string, \u0026#34;is\u0026#34;, real_answer) # 4.11 # Omitted due to similarity with assignment 4/5 # 4.14 flip = random.randint(0, 1) guess = input(\u0026#34;Guess heads or tails: \u0026#34;) guess_num = 0 if guess == \u0026#34;heads\u0026#34; else 1 if flip == guess_num: print(\u0026#34;Correct!\u0026#34;) else: print(\u0026#34;Wrong guess.\u0026#34;) # 4.17 user_move = eval(input(\u0026#34;scissor (0), rock (1), paper (2): \u0026#34;)) computer_move = random.randint(0, 2) user_display = \u0026#34;scissor\u0026#34; if user_move == 1: user_display = \u0026#34;rock\u0026#34; elif user_move == 2: user_display = \u0026#34;paper\u0026#34; computer_display = \u0026#34;scissor\u0026#34; if computer_move == 1: user_display = \u0026#34;rock\u0026#34; elif computer_move == 2: user_display = \u0026#34;paper\u0026#34; outcome = user_move - computer_move if outcome == 0: print(\u0026#34;The computer is \u0026#34; + str(computer_display) + \u0026#34;. You are \u0026#34; + str(user_display) + \u0026#34; too. It is a draw.\u0026#34;) else: result = \u0026#34;You won.\u0026#34; if outcome == 1 else \u0026#34;You lost.\u0026#34; print(\u0026#34;The computer is \u0026#34; + str(computer_display) + \u0026#34;. You are \u0026#34; + str(user_display) + \u0026#34;. \u0026#34; + result) # 4.22 x, y = eval(input(\u0026#34;Enter a point with two coordinates: \u0026#34;)) dist = math.sqrt(x ** 2 + y ** 2) result = \u0026#34;is\u0026#34; if dist \u0026gt; 10: result += \u0026#34; not\u0026#34; print(\u0026#34;Point (\u0026#34; + str(x) + \u0026#34;, \u0026#34; + str(y) + \u0026#34;) \u0026#34; + result + \u0026#34; in the circle\u0026#34;) "});index.add({'id':13,'href':'/docs/ta/cs303e/review/','title':"Exam Review",'content':"Exam Review\r#\r\rThis will have some material when the midterm comes around\r#\r\rðŸ”¨\r#\r\r"});index.add({'id':14,'href':'/docs/ta/cs303e/exercises/ch5/','title':"Chapter 5",'content':"Chapter 5 Exercise Solutions\r#\r\rDownload Solutions\nEmbedded solutions:\n# Exercises for Chapter 5 of \u0026#34;Introduction to Programming using Python\u0026#34; # Solutions made by Skyler Vestal (Hook \u0026#39;Em) # 5.1 input_prompt = \u0026#34;Enter an integer, the input ends if it is 0: \u0026#34; keep_running = eval(input(input_prompt)) != 0 while keep_running: keep_running = eval(input(input_prompt)) != 0 # 5.3 print(\u0026#34;Kilograms Pounds\u0026#34;) for kilos in range(1, 200): pounds = kilos * 2.2 print(format(kilos, \u0026#34;\u0026lt;14\u0026#34;) + format(pounds, \u0026#34;5.1f\u0026#34;)) # 5.9 value = 10000 INTEREST = .05 for i in range(10): value *= (1 + INTEREST) print(\u0026#34;Tutition cost 10 years from now (ouch): $\u0026#34; + format(value, \u0026#34;.2f\u0026#34;)) four_year_cost = value for i in range(3): value *= (1 + INTEREST) four_year_cost += value print(\u0026#34;Tuition for 4 years starting 10 years from now (double ouch): $\u0026#34; + format(four_year_cost, \u0026#34;.2f\u0026#34;)) # 5.14 n = 0 while n ** 2 \u0026lt;= 12000: n += 1 print(n, \u0026#34;is the smallest number that is less than 12,000\u0026#34;) "});index.add({'id':15,'href':'/docs/ta/cs314/','title':"CS 314",'content':"CS 314 - Data Structures\r#\r\rUnder construction until fall ðŸ”¨\r#\r\r"});})();